@import url("https://fonts.googleapis.com/css2?family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap");

:root {
  /* Colors */
  --body-bg: #26282b;
  
  --player-bg-∇-l: #343a3f;
  --player-bg-∇-d: #181a1d;
  --player-border: #424750;
  --player-highlight-1: #ee520f;
  
  --big-button-border-∇-l: #202328;
  --big-button-border-∇-d: #121315;
  


  /* Dimensions */
  --slider-width: 300px;
  --slider-height: 5px;
  --thumb-dimension: 15px;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Ubuntu", sans-serif;
}

body {
  min-height: 100vh;
  display: flex; justify-content: center; align-items: center;
  background: var(--body-bg);
}

/** [Main Container] <=================================================================================================================================================================> */
.music {
  position: relative;
  width: 450px;
  min-height: 600px;
  padding: 30px;

  display: flex; justify-content: end; align-items: center;
  flex-direction: column;

  background: linear-gradient(to top, var(--player-bg-∇-d), var(--player-bg-∇-l));
  border: 2px solid var(--player-border);
  border-radius: 40px;
}

.music .main-icon {
  position: absolute;
  top: 30%;
  transform: translateY(-60%);
  width: 220px;
  height: 220px;
  display: flex; justify-content: center; align-items: center;

  background: linear-gradient(
      var(--player-highlight-1), 
      var(--player-highlight-1)
    ) padding-box,
    linear-gradient(
      to top left,  
      var(--big-button-border-∇-d),
      var(--big-button-border-∇-l)
    ) border-box;
  border: 4px solid transparent;
  border-radius: 50%;

  box-shadow:
  inset 2px 2px 4px hsla(18, 87%, 25%, 0.9),
  inset 5px 5px 10px hsla(18, 93%, 66%, 0.9),
  inset -5px -5px 10px hsla(18, 87%, 25%, 0.9),
  10px 10px 15px rgba(0, 0, 0, 0.8),
  -10px -10px 15px rgba(200, 200, 200, 0.2);
}

.music .main-icon ion-icon {
  position: relative;
  left: -8px;
  width: 150px;
  height: 150px;
  color: white;
}

.music .title {
  display: inline-flex;
  margin-bottom: 10px;

  text-align: center;
  font-weight: 400;
  font-size: 1.2em;
  color: var(--player-highlight-1);
}

/** [Duration Text] <=================================================================================================================================================================> */
.music .durSliderTxt {
  position: relative;
  width: 300px;
  margin-bottom: 10px;
  display: flex; justify-content: space-between;
  
  font-size: 12px;
  font-weight: 200;
  color: var(--player-highlight-1);
}

/** [Duration and Volume Slider] <=================================================================================================================================================================> */
.music .volume {
  --after-width: 100%;
  position: absolute;
  top: 7.5%; left: 17.5%;
  width: 350px; height: calc(var(--slider-height) + 15px);
  display: flex; justify-content: center; align-items: center;
  
  border-radius: 15px;
  transform-origin: right center; 
  transform: rotate(-90deg);
}

.music .volume::after {
  content: '';
  position: absolute;
  z-index: 9999;
  left: 10%;
  width: var(--after-width); height: 120%;
  
  background: linear-gradient(to right, var(--player-bg-∇-d) -57.5%, var(--player-bg-∇-l));
  border-radius: 15px;
  transition: width 1s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.music .duration {
  position: relative;
  width: 300px; height: calc(var(--slider-height) + 15px);
  margin-bottom: 10px;
}

/*~ Volume Slider ICON  */
.music .volume .sliderIcon {
  position: relative;
  left: -10px;
  width: 25px; height: 25px;
  display: inline-flex;
  justify-content: center; align-items: center;
  
  color: white;
  border: 1px solid var(--big-button-border-∇-d);
  border-radius: 50%;
  background: var(--player-highlight-1);
  box-shadow: 
  -2px -2px 4px rgba(200, 200, 200, 0.2),
  2px 2px 4px rgba(0, 0, 0, 0.9),
  inset -1px -1px 4px hsla(18, 87%, 25%, 0.9),
  inset 1px 1px 4px hsla(18, 93%, 66%, 0.9);
  
  transform: rotate(90deg);
  cursor: pointer;
}

.music .volume .sliderIcon ion-icon {
  width: 15px; height: 15px;
}

.music .volume .sliderIcon:active,
.music .volume .sliderIcon.active {
  border: 1px solid var(--player-highlight-1);
  box-shadow: 
  inset 2px 2px 5px hsla(18, 87%, 25%, 0.9),
  inset -1px -1px 2px hsla(18, 93%, 66%, 0.9),
  3px 3px 8px rgba(200, 200, 200, 0.3),
  -3px -3px 8px rgba(0, 0, 0, 0.6);
}

.music .volume .volume-slider,
.music .duration .duration-slider {
  appearance: none;
  outline: none;

  position: relative;  
  width: 300px;
  height: var(--slider-height);

  border-radius: 15px;
  background: var(--player-bg-∇-l);
  box-shadow: 
  inset 0 2px 2px black,
  inset 0 -1px 1px rgb(80, 80, 80);
}
.music .duration .duration-slider {
  position: absolute;
  top: 0;
}
.music .volume .volume-slider::-webkit-slider-thumb,
.music .duration .duration-slider::-webkit-slider-thumb {
  appearance: none;
  cursor: pointer;
  
  position: relative;
  z-index: 99;
  width: var(--thumb-dimension);
  height: var(--thumb-dimension);

  background: radial-gradient(
    var(--player-highlight-1) 0%, 
    var(--player-highlight-1) 30%, 
    var(--body-bg) 35%
    );
  border: 1px solid var(--body-bg);
  border-radius: 50%;
}
.music .duration .duration-slider::-webkit-slider-thumb {
  box-shadow: 
  -2px -2px 4px rgba(200, 200, 200, 0.2),
  2px 2px 4px rgba(0, 0, 0, 0.9),
  inset -1px -1px 2px rgba(200, 200, 200, .1),
  inset 1px 1px 2px rgba(200, 200, 200, .1);
}
.music .volume .volume-slider::-webkit-slider-thumb {
  box-shadow: 
  1px -1px 4px rgba(200, 200, 200, 0.2),
  -1px 1px 4px rgba(0, 0, 0, 0.9), /* difference in direction, h & v-offset */
  inset -1px -1px 2px rgba(255, 255, 255, .1),
  inset 1px 1px 2px rgba(255, 255, 255, .1);
}

.music .duration .duration-slider:active::-webkit-slider-thumb,
.music .volume .volume-slider:active::-webkit-slider-thumb {
  box-shadow: 
  inset -5px -5px 5px rgba(255, 255, 255, 0.15),
  inset 5px 5px 5px rgba(0, 0, 0, 0.1);
}

.music .volume .volSliderFill,
.music .duration .durSliderFill {
  
  height: calc(var(--slider-height));

  border-top-right-radius: 5px;
  border-bottom-right-radius: 5px;
  background: var(--player-highlight-1);
  
  pointer-events: none;      /*? it's stacked above the slider which obstrcuted tap-events when filling was non-zero, this makes sliderFill 'pass-through' for events, event will be therefore triggered on the slider */
}
.music .duration .durSliderFill {
  position: absolute;
  z-index: 2;
  left: calc(var(--thumb-dimension) / 2);
}
.music .volume .volSliderFill {
  position: absolute;
  left: 45px;
}

.music .volume .volSliderFill::before, 
.music .duration .durSliderFill::before {
  content: "";
  position: absolute;
  z-index: 1;
  top: 0;
  left: calc(-1 * var(--thumb-dimension) / 2);
  width: calc(var(--thumb-dimension) / 2);
  height: var(--slider-height);
  
  border-top-left-radius: 5px;
  border-bottom-left-radius: 5px;
  background: var(--player-highlight-1);
}

/** [Buttons] <=================================================================================================================================================================> */
.music .player {
  position: relative;
  width: 400px;
  padding: 10px 20px;

  border: 1px solid var(--big-button-border-∇-l);
  border-radius: 80px;
  box-shadow: 
  -5px -5px 10px rgba(200, 200, 200, 0.2),
  5px 5px 10px rgba(0, 0, 0),
  inset 6px 3px 10px rgba(200, 200, 200, 0.2);
}

.music .player .buttons {
  position: relative;
  width: 100%;

  display: flex; justify-content: space-evenly; align-items: center;
}

.buttons span {
  position: relative;
  width: 60px;
  height: 60px;
  display: flex; justify-content: center; align-items: center;

  border: 2px solid transparent;
  border-radius: 50%;
  background: linear-gradient(
      to bottom,
      var(--player-bg-∇-l), 
      var(--player-bg-∇-d)
    ) padding-box,
    linear-gradient(
      to top left,
      var(--big-button-border-∇-d),
      var(--big-button-border-∇-l)
    ) border-box;

  box-shadow: 
  -4px -4px 8px rgba(200, 200, 200, 0.2),
  4px 8px 8px rgba(0, 0, 0),
  inset 7px 7px 8px rgba(200, 200, 200, 0.1),
  inset -2px -2px 8px rgba(200, 200, 200, 0.1);
    
  color: var(--player-highlight-1);
  cursor: pointer;
  transition: .25s;  
}

.music .player .buttons span:active,
.music .player .buttons span.active {
  color: var(--player-bg);
  border: 1px solid var(--player-highlight-1);
  background: var(--player-highlight-1);
  box-shadow: 
  inset 5px 5px 10px hsla(18, 87%, 25%, 0.9),
  inset -1px -1px 5px hsla(18, 93%, 66%, 0.9),
  5px 5px 10px rgba(200, 200, 200, .2),
  -5px -5px 10px rgba(0, 0, 0, 0.9);
}

.music .player .buttons span ion-icon {
  font-size: 1.25em;
}

.music .player .buttons span.playPause ion-icon {
  font-size: 1.75em;
}

.music .player .buttons span.mode {
  color: grey;
}
.music .player .buttons span.mode:active,
.music .player .buttons span.mode.innerActive {
  color: white;
  background: var(--player-highlight-1);
  box-shadow: 
  inset 5px 5px 10px hsla(18, 87%, 25%, 0.9),
  inset -1px -1px 5px hsla(18, 93%, 66%, 0.9),
  5px 5px 10px rgba(200, 200, 200, .2),
  -5px -5px 10px rgba(0, 0, 0, 0.9); 
}

/* For the left-side 7.5px which was omitted by centre-to-centre approach for sliderFill */
/* I tried keeping the left 7.5px directly but it always made the sliderFill to just touch the thumb's left extreme while sliding */
/* <=================================================================================================================================================================> */
